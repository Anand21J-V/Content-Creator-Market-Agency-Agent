<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <meta name="description" content="Content Genie - AI Marketing Intelligence Agent built with LangGraph and Groq LLaMA."/>
  <title>üßû Content Genie - Your Marketing Intelligence Agent</title>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>
  <link rel="preconnect" href="https://fonts.googleapis.com"/>
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet"/>
  
  <style>
    /* Core Reset */
    * { margin: 0; padding: 0; box-sizing: border-box; }

    html {
      scroll-behavior: smooth;
    }

    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #141E30, #243B55);
      color: #fff;
      min-height: 100vh;
      padding: 0 1rem;
    }

    .container {
      max-width: 1300px;
      margin: auto;
      padding: 2rem 1rem;
    }

    .header {
      text-align: center;
      margin-bottom: 2rem;
    }

    .title {
      font-size: 3.2rem;
      font-weight: 800;
      background: linear-gradient(45deg, #13ADC7, #945DD6);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .typewriter {
      font-size: 1.2rem;
      color: #ddd;
      margin-top: 1rem;
      font-family: monospace;
      min-height: 1.5em;
    }

    .main-grid {
      display: grid;
      grid-template-columns: 1fr 350px;
      gap: 2rem;
    }

    .input-box, .sidebar {
      background: rgba(255,255,255,0.05);
      padding: 2rem;
      border-radius: 20px;
      backdrop-filter: blur(10px);
      position: sticky;
      top: 2rem;
    }

    .input-label {
      margin-bottom: 0.5rem;
      font-weight: 600;
      display: block;
    }

    .input-field {
      width: 100%;
      padding: 1rem;
      border-radius: 12px;
      border: none;
      background: rgba(255,255,255,0.1);
      color: white;
      font-size: 1rem;
    }

    .input-field:focus {
      outline: 2px solid #13ADC7;
    }

    .btn {
      margin-top: 1rem;
      width: 100%;
      padding: 1rem;
      background: linear-gradient(45deg, #13ADC7, #945DD6);
      color: white;
      border: none;
      border-radius: 12px;
      font-weight: 600;
      cursor: pointer;
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 20px rgba(255,255,255,0.1);
    }

    .results {
      margin-top: 3rem;
      display: grid;
      gap: 2rem;
    }

    .card {
      background: rgba(255,255,255,0.06);
      padding: 2rem;
      border-radius: 16px;
      box-shadow: 0 0 15px rgba(0,0,0,0.3);
      position: relative;
    }

    .card h3 {
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: #13ADC7;
    }

    .card .copy-btn {
      position: absolute;
      top: 1.2rem;
      right: 1.2rem;
      background: transparent;
      color: #ccc;
      border: none;
      cursor: pointer;
    }

    .card pre {
      white-space: pre-wrap;
      color: #eee;
    }

    .toast {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background: #13ADC7;
      color: white;
      padding: 1rem 1.5rem;
      border-radius: 12px;
      box-shadow: 0 5px 20px rgba(0,0,0,0.3);
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 999;
    }

    .toast.show {
      opacity: 1;
    }

    @media (max-width: 768px) {
      .main-grid {
        grid-template-columns: 1fr;
      }

      .input-box, .sidebar {
        position: static;
      }
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="header">
      <h1 class="title">üßû Content Genie</h1>
      <div class="typewriter" id="typewriter"></div>
    </div>

    <div class="main-grid">
      <div class="input-box">
        <label class="input-label" for="topicInput">Enter Topic or Niche</label>
        <input type="text" id="topicInput" class="input-field" placeholder="e.g. Remote Work Productivity Tools" />
        <button class="btn" id="generateBtn"><i class="fas fa-rocket"></i> Run Content Agent</button>
      </div>

      <div class="sidebar">
        <h3><i class="fas fa-lightbulb"></i> Tips</h3>
        <ul style="color:#ccc; font-size: 0.95rem; line-height: 1.6;">
          <li>Use short, focused topics (e.g. AI in Education)</li>
          <li>Outputs:</li>
          <li>üß† Trend Research</li>
          <li>üìä Competitor Analysis</li>
          <li>üéØ Content Ideas</li>
          <li>üìù Strategy Summary</li>
        </ul>
        <p style="font-size: 0.85rem; color:#999; font-style: italic;">Powered by LangGraph + Groq LLaMA</p>
      </div>
    </div>

    <div class="results" id="results">
      <!-- Result cards populated dynamically -->
    </div>
  </div>

  <div class="toast" id="toast">Copied to clipboard!</div>

  <script>
    const typewriter = document.getElementById('typewriter');
    const phrases = ["Get content ideas in seconds.", "Uncover viral trends.", "Analyze competitors like a pro.", "Generate your next content plan."];
    let index = 0, i = 0, current = '', isDeleting = false;

    function typeEffect() {
      current = phrases[index];
      let displayed = current.substring(0, i);
      typewriter.textContent = displayed + (i % 2 === 0 ? '|' : '');
      if (!isDeleting) {
        i++;
        if (i > current.length) {
          isDeleting = true;
          setTimeout(typeEffect, 1500);
          return;
        }
      } else {
        i--;
        if (i === 0) {
          isDeleting = false;
          index = (index + 1) % phrases.length;
        }
      }
      setTimeout(typeEffect, isDeleting ? 40 : 80);
    }
    typeEffect();

    document.getElementById('generateBtn').addEventListener('click', async () => {
      const topic = document.getElementById('topicInput').value.trim();
      if (!topic) return alert("Please enter a topic!");

      document.getElementById('results').innerHTML = "";
      const res = await fetch('/generate', {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ topic })
      });

      const data = await res.json();
      if (!data.success) return alert("Error: " + data.error);

      const cards = [
        { title: "üß† Trend Research", key: "trends" },
        { title: "üìä Competitor Analysis", key: "competitor_analysis" },
        { title: "üéØ Viral Content Ideas", key: "content_ideas" },
        { title: "üìù Strategy Summary", key: "summary" }
      ];

      for (let card of cards) {
        const html = `
          <div class="card">
            <h3>${card.title}</h3>
            <button class="copy-btn" onclick="copyToClipboard(this)"><i class="fas fa-copy"></i></button>
            <pre>${data.data[card.key]}</pre>
          </div>
        `;
        document.getElementById('results').innerHTML += html;
      }
    });

    function copyToClipboard(el) {
      const text = el.nextElementSibling.innerText;
      navigator.clipboard.writeText(text);
      const toast = document.getElementById('toast');
      toast.classList.add('show');
      setTimeout(() => toast.classList.remove('show'), 2000);
    }
  </script>
</body>
</html>
